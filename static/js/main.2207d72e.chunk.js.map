{"version":3,"sources":["components/nav-bar/NavBar.js","components/pages/homepage/Homepage.js","components/time-picker-v1/TimePickerV1.js","components/time-picker-v2/TimePickerV2.js","components/pages/time-picker-page/TimePickerPage.js","components/pages/error/Error.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","className","to","Toggle","Collapse","id","Nav","Link","as","Homepage","Button","timeMatch","toInternal","TimePickerV1","props","required","value","onChange","testid","useState","str","setStr","useEffect","valInternal","replace","length","g3","newStr","toUpperCase","Form","Group","Control","event","internalStr","target","test","type","placeholder","style","fontFamily","internalMatch","finishedMatch","toNormalTime","militaryMatch","hours","parseInt","minutes","dayHalf","toString","charAt","substring","TimePickerV2","mask","state","setState","display","setDisplay","prev","toMilitaryTime","g1","prevState","backMatch","TimePickerPage","time0","setTime0","time1","setTime1","time2","setTime2","time3","console","log","Label","setValue","role","Text","Error","handleHomeClick","redirect","ctx","document","getElementById","getContext","y1","y2","y3","y1Forward","y2Forward","y3Forward","beginPath","moveTo","bezierCurveTo","lineTo","fillStyle","strokeStyle","fill","stroke","drawVisor","animate","requestAnimationFrame","clearRect","innerWidth","innerHeight","lineWidth","this","message","code","undefined","location","onClick","height","width","Component","App","path","component","exact","TimePicker","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2207d72e.chunk.js","sourcesContent":["import React from 'react';\nimport './NavBar.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nconst NavBar = () => {\n    return (\n        <div>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n                <Navbar.Brand>\n                    <Link className=\"brand-link\" to=\"/\"><i className=\"bi-code-square nav-icon\" /> Luke Irvine</Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link as={Link} to=\"/timepicker\">Time Picker</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default NavBar\n","import React from 'react';\nimport NavBar from './../../nav-bar/NavBar';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport './Homepage.css'\n\nconst Homepage = () => {\n    return (\n        <>\n            <NavBar />\n            <div className=\"hp-content\">\n                <h1>Playground Homepage</h1>\n                <div className=\"hp-item\">\n                    <h2>TimePicker</h2>\n                    <p>This timepicker is a simple form input that does all its work using regular expressions.</p>\n                    <Button \n                        variant=\"primary\" \n                        as={ Link }\n                        to=\"/timepicker\"\n                    >\n                        <i className='bi-clock hp-icon' />\n                        <span className=\"homepage-link-btn-text\">See the TimePicker</span>\n                    </Button>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default Homepage;","import React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\n\n// This matches dd:dd am/pm with or without the colon and space. \n// It also matches any partiality of that string\nconst timeMatch = /^(0?\\d|1[0-2]):?((?:[0-5]|$)(?:\\d|$)) ?((?:a|$)(?:m|$)|(?:p|$)(?:m|$))$/gi\n// this regex converts the display formatting to the simpler internal formatting.\n// It has lose rules because the display formatting is strictly enforced already\nconst toInternal = /^(\\d*):(\\d*) *(\\w*)$/gi\n\nconst TimePickerV1 = props => {\n    const { required, className, value, onChange, testid } = props;\n    // internal value of format 1200am etc\n    const [str, setStr] = useState('');\n\n    useEffect(() => {\n        // convert display formatting to internal formatting\n        let valInternal = value.replace(toInternal, '$1$2$3');\n        if (str.length > valInternal.length) {\n            // handle formatting going forward\n            let g3 = str.replace(timeMatch, '$3')\n            if (g3.length === 0) {\n                // handle formatting until we get to am/pm\n                onChange(str.replace(timeMatch, '$1:$2'))\n            } else {\n                // handle formatting once we are at am/pm\n                let newStr = str.replace(timeMatch, '$1:$2 $3').toUpperCase()\n                if (g3.length === 1) {\n                    newStr += 'M';\n                }\n                onChange(newStr);\n            }\n        } else {\n            // handle backspace formatting\n            onChange(str.replace(timeMatch, '$1$2'))\n        }\n    }, [str])\n\n    const handleChange = event => {\n        let temp = event.target.value;\n        let internalStr = temp.replace(toInternal, '$1$2$3')\n        if (timeMatch.test(internalStr) || internalStr === '') {\n            setStr(internalStr)\n        }\n    }\n\n    return (\n        <>\n            <Form.Group>\n                <Form.Control\n                    required={required}\n                    className={className}\n                    data-testid={testid}\n                    value={value}\n                    onChange={handleChange}\n                    type=\"text\"\n                    placeholder=\"00:00 AM\"\n                    style={{fontFamily: 'monospace'}}\n                />\n            </Form.Group>\n        </>\n    )\n}\n\nexport default TimePickerV1","import React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\n\n// This matches dd:dd am/pm with or without the colon and space. \n// It also matches any partiality of that string\nconst timeMatch = /^(?:(0?\\d|1[0-2])|$):?((?:[0-5]|$)(?:\\d|$)) ?((?:a|$)(?:m|$)|(?:p|$)(?:m|$))$/gi\n// this regex converts the display formatting to the simpler internal formatting.\n// It has lose rules because the display formatting is strictly enforced already\nconst internalMatch = /^(\\d*):(\\d*) *(\\w*)$/gi\n// this regex determines if the display value is a finished time\n// Used for sending out state or not\nconst finishedMatch = /^(\\d\\d):(\\d\\d) ([AP]M)$/g\n\n// str is of format 12:30 AM etc\nconst toMilitaryTime = str => {\n    let hours = parseInt(str.replace(finishedMatch, '$1'));\n    let minutes = str.replace(finishedMatch, '$2');\n    let dayHalf = str.replace(finishedMatch, '$3');\n    if (dayHalf === 'AM') {\n        hours = hours === 12 ? 0 : hours;\n    } else {\n        // PM\n        hours = hours !== 12 ? hours + 12 : hours;\n    }\n    hours = hours.toString();\n    hours = hours.length === 1 ? '0' + hours : hours;\n    return hours + ':' + minutes;\n}\n\n// str is of format 13:30 etc (military time)\nconst toNormalTime = str => {\n    let militaryMatch = /^([01]\\d|2[0-3]):([0-5]\\d)$/g;\n    if (militaryMatch.test(str)) {\n        let hours = parseInt(str.replace(militaryMatch, '$1'));\n        let minutes = str.replace(militaryMatch, '$2');\n        let dayHalf = '';\n        if (hours < 12) {\n            dayHalf = 'AM';\n            hours = hours === 0 ? '12' : hours;\n        } else {\n            dayHalf = 'PM';\n            hours = hours > 12 ? hours - 12 : hours;\n        }\n        hours = hours.toString();\n        hours = hours.length === 1 ? '0' + hours : hours;\n        return hours + ':' + minutes + ' ' + dayHalf;\n    } else {\n        return '';\n    }\n}\n\nconst toInternal = str => {\n    let newStr = str.replace(internalMatch, '$1$2$3');\n    if (newStr.charAt(0) === '0') {\n        newStr = newStr.substring(1);\n    }\n    return newStr;\n}\n\nconst TimePickerV2 = props => {\n    const { required, className, value, onChange, testid } = props;\n    // internal value of format 1200am etc\n    const [state, setState] = useState({\n        str: toInternal(toNormalTime(value)),\n        mask: '00:00 AM'\n    })\n    const [display, setDisplay] = useState(toNormalTime(value))\n\n    useEffect(() => {\n        setState(prev => ({...prev, str: toInternal(toNormalTime(value))}));\n        setDisplay(toNormalTime(value));\n    }, [value])\n\n    // Triggers every time display value is changed\n    useEffect(() => {\n        if (finishedMatch.test(display)) {\n            // display is a complete time\n            // Send state out of component. Final step.\n            onChange(toMilitaryTime(display))\n        }\n    }, [display])\n\n    // Triggers every time internal value is changed\n    useEffect(() => {\n        // convert display formatting to internal formatting\n        // let valInternal = toInternal(value);\n        // // console.log('old value to internal', valInternal);\n        // handle formatting going forward\n        let g1 = state.str.replace(timeMatch, '$1');\n        let g3 = state.str.replace(timeMatch, '$3');\n        if (state.str.length !== 0) {\n            if (g3.length === 0) {\n                // handle formatting until we get to am/pm\n                let newStr = state.str.replace(timeMatch, '$1:$2')\n                if (g1.length === 1) {\n                    newStr = '0' + newStr;\n                }\n                // console.log('return str', newStr)\n                // console.log(\"-----------------------------\")\n                setDisplay(newStr)\n            } else {\n                // handle formatting once we are at am/pm\n                let newStr = state.str.replace(timeMatch, '$1:$2 $3').toUpperCase()\n                if (g3.length === 1) {\n                    newStr += 'M';\n                }\n                if (g1.length === 1) {\n                    newStr = '0' + newStr;\n                }\n                // console.log('return str', newStr)\n                // console.log(\"-----------------------------\")\n                setDisplay(newStr);\n            }\n        }\n    }, [state.str])\n\n    const handleChange = event => {\n        // console.log('event', event.target.value)\n        let internalStr = toInternal(event.target.value);\n        // console.log('new internal', internalStr)\n        if (event.target.value.length > display.length) {\n            if (timeMatch.test(internalStr) || internalStr === '') {\n                setState(prevState => ({...prevState, str: internalStr}))\n            }\n        } else {\n            let newStr = event.target.value;\n            let backMatch = /^(\\d\\d:\\d\\d) (a|p)$/gi\n            if (backMatch.test(newStr)) {\n                newStr = newStr.replace(backMatch, '$1');\n            }\n            // console.log('return str', newStr)\n            // console.log(\"-----------------------------\")\n            setDisplay(newStr);\n        }\n    }\n\n    return (\n        <>\n            <Form.Group>\n                <Form.Control\n                    required={required}\n                    className={className}\n                    data-testid={testid}\n                    value={display}\n                    onChange={handleChange}\n                    type=\"text\"\n                    placeholder=\"00:00 AM\"\n                    style={{fontFamily: 'monospace'}}\n                />\n            </Form.Group>\n        </>\n    )\n}\n\nexport default TimePickerV2\n","import React, { useState, useEffect } from 'react';\nimport NavBar from './../../nav-bar/NavBar';\nimport { TimeInputPolyfill } from '@time-input-polyfill/react'\nimport TimePickerV1 from '../../time-picker-v1/TimePickerV1';\nimport TimePickerV2 from '../../time-picker-v2/TimePickerV2';\nimport TimePickerV3 from '../../time-picker-v3/TimePickerV3';\nimport { Form } from 'react-bootstrap';\nimport './TimePickerPage.css';\n\nconst DEBUG = true;\n\nconst TimePickerPage = () => {\n    const [time0, setTime0] = useState('');\n    const [time1, setTime1] = useState('');\n    const [time2, setTime2] = useState('');\n    const [time3, setTime3] = useState('');\n\n    useEffect(() => {\n        console.log(\"time0\", time0)\n    }, [time0])\n\n    useEffect(() => {\n        console.log(\"time1\", time1)\n    }, [time1])\n\n    useEffect(() => {\n        console.log(\"time2\", time2)\n    }, [time2])\n\n    useEffect(() => {\n        console.log(\"time3\", time3)\n    }, [time3])\n\n    return (\n        <>\n            <NavBar />\n            <div className=\"tpp-content\">\n                <h1>Time Picker</h1>\n                <Form className=\"tpp-form\">\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>External Library Default</Form.Label>\n                        <TimeInputPolyfill\n                            value={time0}\n                            setValue={event => setTime0(event)}\n                            className=\"default-time-picker\"\n                            role=\"textbox\"\n                        />\n                        <Form.Text>\n                            Not bad, but you have to tab through hours and minutes and can't just type straight through. \n                            A plus though is that it allows mobile devices to use their own default system time pickers. Sorta.\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>My version 1</Form.Label>\n                        <TimePickerV1\n                            value={time1}\n                            onChange={event => setTime1(event)}\n                            className=\"tpp-timepicker\"\n                        />\n                        <Form.Text>\n                            This version works great typing forward, except you can't see the format template as you type. \n                            Also, backspacing doesn't work so well.\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>My version 2</Form.Label>\n                        <TimePickerV2\n                            value={time2}\n                            onChange={event => setTime2(event)}\n                            className=\"tpp-timepicker\"\n                        />\n                        <Form.Text>\n                            The backspacing works great on this version, and you can backspace to any point, start typing forward \n                            again, and it will all work as expected. It still doesn't show you the template as you type though.\n                        </Form.Text>\n                    </Form.Group>\n                    {/* <Form.Group className=\"mb-3\">\n                        <Form.Label>Version 3</Form.Label>\n                        <TimePickerV3\n                            value={time3}\n                            onChange={event => setTime3(event)}\n                            className=\"tpp-timepicker\"\n                        />\n                    </Form.Group> */}\n                </Form>\n            </div>\n        </>\n    )\n}\n\nexport default TimePickerPage","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Error.css'\n\nexport function showErrorPage(error) {\n  console.log(error.code);\n  console.log(error.message);\n}\n\n// Error page styling and animation taken from https://codepen.io/eroxburgh/pen/zYYyEPg\n\nclass Error extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            redirect: false\n        }\n    }\n\n    handleHomeClick = () => {\n        this.setState({redirect: true})\n    }\n\n    componentDidMount() {\n        function drawVisor() {\n            const canvas = document.getElementById('visor');\n            const ctx = canvas.getContext('2d');\n            \n            ctx.beginPath();\n            ctx.moveTo(5, 45);\n            ctx.bezierCurveTo(15, 64, 45, 64, 55, 45);\n            \n            ctx.lineTo(55, 20);\n            ctx.bezierCurveTo(55, 15, 50, 10, 45, 10);\n            \n            ctx.lineTo(15, 10);\n            \n            ctx.bezierCurveTo(15, 10, 5, 10, 5, 20);\n            ctx.lineTo(5, 45);\n            \n            ctx.fillStyle = '#2f3640';\n            ctx.strokeStyle = '#f5f6fa';\n            ctx.fill();\n            ctx.stroke();\n          }\n          \n          const cordCanvas = document.getElementById('cord');\n          const ctx = cordCanvas.getContext('2d');\n          \n          let y1 = 160;\n          let y2 = 100;\n          let y3 = 100;\n          \n          let y1Forward = true;\n          let y2Forward = false;\n          let y3Forward = true;\n          \n          function animate() {\n            requestAnimationFrame(animate);\n            // eslint-disable-next-line no-restricted-globals\n            ctx.clearRect(0, 0, innerWidth, innerHeight);\n            \n            ctx.beginPath();\n            ctx.moveTo(130, 170);\n            ctx.bezierCurveTo(250, y1, 345, y2, 400, y3);\n            \n            ctx.strokeStyle = 'white';\n            ctx.lineWidth = 8;\n            ctx.stroke();\n           \n            \n            if (y1 === 100) {\n              y1Forward = true;\n            }\n            \n            if (y1 === 300) {\n              y1Forward = false;\n            }\n            \n            if (y2 === 100) {\n              y2Forward = true;\n            }\n            \n            if (y2 === 310) {\n              y2Forward = false;\n            }\n            \n            if (y3 === 100) {\n              y3Forward = true;\n            }\n            \n            if (y3 === 317) {\n              y3Forward = false;\n            }\n            \n            y1Forward ? y1 += 1 : y1 -= 1;\n            y2Forward ? y2 += 1 : y2 -= 1;\n            y3Forward ? y3 += 1 : y3 -= 1;\n          }\n          \n          drawVisor();\n          animate();\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to='/' />;\n        }\n        var message = \"It looks like one of the developers fell asleep\"\n        var code = \"404\"\n        if (this.props.location.state !== undefined) {\n          if (this.props.location.state.code === \"PERMISSION_DENIED\") {\n            code = \"403\"\n            message = \"Looks like there was an error and you don't have permission to access\" +\n                      \" this website's data\";\n          } else {\n            code = this.props.location.state.code;\n            message = this.props.location.state.message;\n          }\n        }\n        return (\n            <div className=\"error-page-container\">\n                {/* <NavBar /> */}\n                <div className=\"moon\"></div>\n                <div className=\"moon__crater moon__crater1\"></div>\n                <div className=\"moon__crater moon__crater2\"></div>\n                <div className=\"moon__crater moon__crater3\"></div>\n\n                <div className=\"star star1\"></div>\n                <div className=\"star star2\"></div>\n                <div className=\"star star3\"></div>\n                <div className=\"star star4\"></div>\n                <div className=\"star star5\"></div>\n\n                <div className=\"error\">\n                <div className=\"error__title\">{code}</div>\n                <div className=\"error__subtitle\">Hmmm...</div>\n                <div className=\"error__description\">{message}</div>\n                <button onClick={this.handleHomeClick} className=\"error__button error__button--active\">\n                    HOME PAGE\n                </button>\n                {/* <button className=\"error__button\">CONTACT</button> */}\n                </div>\n\n                <div className=\"astronaut\">\n                <div className=\"astronaut__backpack\"></div>\n                <div className=\"astronaut__body\"></div>\n                <div className=\"astronaut__body__chest\"></div>\n                <div className=\"astronaut__arm-left1\"></div>\n                <div className=\"astronaut__arm-left2\"></div>\n                <div className=\"astronaut__arm-right1\"></div>\n                <div className=\"astronaut__arm-right2\"></div>\n                <div className=\"astronaut__arm-thumb-left\"></div>\n                <div className=\"astronaut__arm-thumb-right\"></div>\n                <div className=\"astronaut__leg-left\"></div>\n                <div className=\"astronaut__leg-right\"></div>\n                <div className=\"astronaut__foot-left\"></div>\n                <div className=\"astronaut__foot-right\"></div>\n                <div className=\"astronaut__wrist-left\"></div>\n                <div className=\"astronaut__wrist-right\"></div>\n                \n                <div className=\"astronaut__cord\">\n                    <canvas id=\"cord\" height=\"500px\" width=\"500px\"></canvas>\n                </div>\n                \n                <div className=\"astronaut__head\">\n                    <canvas id=\"visor\" width=\"60px\" height=\"60px\"></canvas>\n                    <div className=\"astronaut__head-visor-flare1\"></div>\n                    <div className=\"astronaut__head-visor-flare2\"></div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Error;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Homepage from './components/pages/homepage/Homepage';\nimport TimePicker from './components/pages/time-picker-page/TimePickerPage';\nimport Error from \"./components/pages/error/Error\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n          <Route path=\"/\" component={Homepage} exact/>\n          <Route path=\"/timepicker\" component={TimePicker} exact/>\n          <Route render={(props) => <Error {...props}/>}/>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}